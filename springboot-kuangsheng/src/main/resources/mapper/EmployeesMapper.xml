<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springbootkuangsheng.dao.EmployeesMapper">
    <resultMap id="BaseResultMap" type="com.example.springbootkuangsheng.model.Employees">
        <!--@mbg.generated-->
        <!--@Table employees-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="lastName" jdbcType="VARCHAR" property="lastname"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <result column="department" jdbcType="INTEGER" property="department"/>
        <result column="birth" jdbcType="DATE" property="birth"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>

        <association property="eDepartment" javaType="com.example.springbootkuangsheng.model.Departments">
            <result property="departmentName" column="dname"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, lastName, email, gender, department, birth, created_at, updated_at
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from employees
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete
        from employees
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.springbootkuangsheng.model.Employees"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into employees (lastName, email, gender,
                               department, birth, created_at,
                               updated_at)
        values (#{lastname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
                #{department,jdbcType=INTEGER}, #{birth,jdbcType=DATE}, #{createdAt,jdbcType=TIMESTAMP},
                #{updatedAt,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.example.springbootkuangsheng.model.Employees" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into employees
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="lastname != null">
                lastName,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="department != null">
                department,
            </if>
            <if test="birth != null">
                birth,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="lastname != null">
                #{lastname,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="department != null">
                #{department,jdbcType=INTEGER},
            </if>
            <if test="birth != null">
                #{birth,jdbcType=DATE},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.springbootkuangsheng.model.Employees">
        <!--@mbg.generated-->
        update employees
        <set>
            <if test="lastname != null">
                lastName = #{lastname,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="department != null">
                department = #{department,jdbcType=INTEGER},
            </if>
            <if test="birth != null">
                birth = #{birth,jdbcType=DATE},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.springbootkuangsheng.model.Employees">
        <!--@mbg.generated-->
        update employees
        set lastName   = #{lastname,jdbcType=VARCHAR},
            email      = #{email,jdbcType=VARCHAR},
            gender     = #{gender,jdbcType=INTEGER},
            department = #{department,jdbcType=INTEGER},
            birth      = #{birth,jdbcType=DATE},
            created_at = #{createdAt,jdbcType=TIMESTAMP},
            updated_at = #{updatedAt,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!--auto generated by MybatisCodeHelper on 2022-01-28-->
    <select id="findall" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from employees
    </select>


    <select id="getEmployees" resultMap="BaseResultMap">
        SELECT `employees`.*, departments.departmentName as dname
        FROM `employees`
                     INNER JOIN `departments` ON `departments`.`id` = `employees`.`department`
    </select>

</mapper>