<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboottest.dao.UsersDao">

    <resultMap type="com.example.springboottest.entity.Users" id="UsersMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
        <result property="operator" column="operator" jdbcType="VARCHAR"/>
        <result property="version" column="version" jdbcType="INTEGER"/>
        <result property="deleted" column="deleted" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UsersMap">
        select id,
               name,
               email,
               age,
               create_time,
               updated_at,
               operator,
               version,
               deleted
        from test.users
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UsersMap">
        select id,
               name,
               email,
               age,
               create_time,
               updated_at,
               operator,
               version,
               deleted
        from test.users
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UsersMap">
        select
        id, name, email, age, create_time, updated_at, operator, version, deleted
        from test.users
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
            <if test="operator != null and operator != ''">
                and operator = #{operator}
            </if>
            <if test="version != null">
                and version = #{version}
            </if>
            <if test="deleted != null">
                and deleted = #{deleted}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into test.users(name, email, age, create_time, updated_at, operator, version, deleted)
        values (#{name}, #{email}, #{age}, #{createTime}, #{updatedAt}, #{operator}, #{version}, #{deleted})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into test.users(name, email, age, create_time, updated_at, operator, version, deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.email}, #{entity.age}, #{entity.createTime}, #{entity.updatedAt},
            #{entity.operator}, #{entity.version}, #{entity.deleted})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into test.users(name, email, age, create_time, updated_at, operator, version, deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.email}, #{entity.age}, #{entity.createTime}, #{entity.updatedAt},
            #{entity.operator}, #{entity.version}, #{entity.deleted})
        </foreach>
        on duplicate key update
        name = values(name) , email = values(email) , age = values(age) , create_time = values(create_time) , updated_at
        = values(updated_at) , operator = values(operator) , version = values(version) , deleted = values(deleted)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update test.users
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt},
            </if>
            <if test="operator != null and operator != ''">
                operator = #{operator},
            </if>
            <if test="version != null">
                version = #{version},
            </if>
            <if test="deleted != null">
                deleted = #{deleted},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from test.users
        where id = #{id}
    </delete>

</mapper>

